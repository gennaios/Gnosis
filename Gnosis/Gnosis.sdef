<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE dictionary SYSTEM "file://localhost/System/Library/DTDs/sdef.dtd">

<dictionary title="ScriptTest Terminology">

    <suite name="Standard Suite" code="????" description="Common classes and commands for all applications.">

        <command name="count" code="corecnte"
                 description="Return the number of elements of a particular class within an object.">
            <cocoa class="NSCountCommand"/>
            <access-group identifier="*"/>
            <direct-parameter type="specifier" requires-access="r" description="The objects to be counted."/>
            <parameter name="each" code="kocl" type="type" optional="yes"
                       description="The class of objects to be counted." hidden="yes">
                <cocoa key="ObjectClass"/>
            </parameter>
            <result type="integer" description="The count."/>
        </command>

        <command name="delete" code="coredelo" description="Delete an object.">
            <cocoa class="NSDeleteCommand"/>
            <access-group identifier="*"/>
            <direct-parameter type="specifier" description="The object(s) to delete."/>
        </command>

        <command name="duplicate" code="coreclon" description="Copy an object.">
            <cocoa class="NSCloneCommand"/>
            <access-group identifier="*"/>
            <direct-parameter type="specifier" requires-access="r" description="The object(s) to copy."/>
            <parameter name="to" code="insh" type="location specifier"
                       description="The location for the new copy or copies." optional="yes">
                <cocoa key="ToLocation"/>
            </parameter>
            <parameter name="with properties" code="prdt" type="record"
                       description="Properties to set in the new copy or copies right away." optional="yes">
                <cocoa key="WithProperties"/>
            </parameter>
        </command>

        <command name="exists" code="coredoex" description="Verify that an object exists.">
            <cocoa class="NSExistsCommand"/>
            <access-group identifier="*"/>
            <direct-parameter type="any" requires-access="r" description="The object(s) to check."/>
            <result type="boolean" description="Did the object(s) exist?"/>
        </command>

        <command name="make" code="corecrel" description="Create a new object.">
            <cocoa class="NSCreateCommand"/>
            <access-group identifier="*"/>
            <parameter name="new" code="kocl" type="type" description="The class of the new object.">
                <cocoa key="ObjectClass"/>
            </parameter>
            <parameter name="at" code="insh" type="location specifier" optional="yes"
                       description="The location at which to insert the object.">
                <cocoa key="Location"/>
            </parameter>
            <parameter name="with data" code="data" type="any" optional="yes"
                       description="The initial contents of the object.">
                <cocoa key="ObjectData"/>
            </parameter>
            <parameter name="with properties" code="prdt" type="record" optional="yes"
                       description="The initial values for properties of the object.">
                <cocoa key="KeyDictionary"/>
            </parameter>
            <result type="specifier" description="The new object."/>
        </command>

        <class name="application" code="capp" description="The application's top-level scripting object.">
            <cocoa class="NSApplication"/>
            <property name="name" code="pnam" type="text" access="r" description="The name of the application."/>
            <property name="frontmost" code="pisf" type="boolean" access="r"
                      description="Is this the active application?">
                <cocoa key="isActive"/>
            </property>
            <property name="version" code="vers" type="text" access="r"
                      description="The version number of the application."/>
            <element type="window" access="r">
                <cocoa key="orderedWindows"/>
            </element>
            <responds-to command="open">
                <cocoa method="handleOpenScriptCommand:"/>
            </responds-to>
            <responds-to command="print">
                <cocoa method="handlePrintScriptCommand:"/>
            </responds-to>
            <responds-to command="quit">
                <cocoa method="handleQuitScriptCommand:"/>
            </responds-to>
        </class>

        <class name="window" code="cwin" description="A window.">
            <cocoa class="NSWindow"/>
            <property name="name" code="pnam" type="text" access="r" description="The title of the window.">
                <cocoa key="title"/>
            </property>
            <property name="id" code="ID  " type="integer" access="r"
                      description="The unique identifier of the window.">
                <cocoa key="uniqueID"/>
            </property>
            <property name="index" code="pidx" type="integer"
                      description="The index of the window, ordered front to back.">
                <cocoa key="orderedIndex"/>
            </property>
            <property name="bounds" code="pbnd" type="rectangle" description="The bounding rectangle of the window.">
                <cocoa key="boundsAsQDRect"/>
            </property>
            <property name="closeable" code="hclb" type="boolean" access="r"
                      description="Does the window have a close button?">
                <cocoa key="hasCloseBox"/>
            </property>
            <property name="miniaturizable" code="ismn" type="boolean" access="r"
                      description="Does the window have a minimize button?">
                <cocoa key="isMiniaturizable"/>
            </property>
            <property name="miniaturized" code="pmnd" type="boolean" description="Is the window minimized right now?">
                <cocoa key="isMiniaturized"/>
            </property>
            <property name="resizable" code="prsz" type="boolean" access="r" description="Can the window be resized?">
                <cocoa key="isResizable"/>
            </property>
            <property name="visible" code="pvis" type="boolean" description="Is the window visible right now?">
                <cocoa key="isVisible"/>
            </property>
            <property name="zoomable" code="iszm" type="boolean" access="r"
                      description="Does the window have a zoom button?">
                <cocoa key="isZoomable"/>
            </property>
            <property name="zoomed" code="pzum" type="boolean" description="Is the window zoomed right now?">
                <cocoa key="isZoomed"/>
            </property>
        </class>

    </suite>

    <!-- Insert Gnosis suite here -->

    <!-- 1 -->
    <suite name="Gnosis" code="GnoS" description="Gnosis suite.">
        <!-- 2 -->
        <class name="application" code="capp" description="An application's top level scripting object.">
            <cocoa class="NSApplication"/>

            <!-- 3 -->
            <element type="epub" access="r">
                <cocoa key="epubs"/>
            </element>
        </class>

        <!-- Insert command here -->

        <!-- 4 -->
        <class name="epub" code="ePuB" description="An ePub file" plural="epubs">
            <cocoa class="EpubFile"/>

            <!-- 5 -->
            <property name="file" code="fIlE" type="text" access="r"
                      description="The path of the ePub file.">
                <cocoa key="filePath"/>
            </property>

            <property name="name" code="pnam" type="text" access="r"
                      description="The title of the ePub.">
                <cocoa key="title"/>
            </property>


            <property name="authors" code="pnam" type="text" access="r"
                      description="The authors of the ePub.">
                <cocoa key="authors"/>
            </property>

            <!-- 7 -->
            <!-- Insert element of tags here -->

            <!-- Insert responds-to command here -->

        </class>

    </suite>

</dictionary>
